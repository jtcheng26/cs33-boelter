Question Number,Title,time (seconds),Text response?,Answer option list or regex (case insensitive),"If MCQ, which zero-indexed answer choice is correct?",question text (may be multi lined),Solution
1,Warmup,60,Yes,60,,Let's start with a warmup question: convert this hexadecimal value into decimal: 0x3c,60. 16*3 + 12 = 48 + 12 = 60
2,Floating comparisons,40,No,"- No, No
- No, Yes
- Yes, No
- Yes, Yes",2,"Assuming all values are 32-bit floating point values,

1. Is +inf *always* equal to +inf?
2. Is +NaN *always* equal to +NaN?"," +inf has a sign bit of 0, all 1 bits for the exponent, and all 0s for the fractional field. As such, 2 positive infs will always have the same bit representation and will always be equal.
+NaN has a sign bit of 0 or 1 (there is no such thing as positivity vs negativity for NaN), all 1 bits for the exponent, and anything except all 0s for the fractional field. NaN is standardized to not equal anything, including itself."
3,"My poor, poor model",40,Yes,ISA,,"What is the 3 letter acronym for the model that specifies a specific bytecode's instruction set, registers, data types, memory architecture, etc?",
4,Registers,40,No,"- rax, rdi, rsi , rsp, rbp
- rsp, rsi, rdi, rax, rbp
- rsp, rdi, rsi, rax, rbp
- rbp, rdi, rsi, rax, rsp",2,"In x86 conventions, the stack pointer is in register %___, the first argument is in %___, the 2nd argument is in %___, the return value is in %___, and the base pointer is in %___.",
5,Many arguments,40,No,"- Having more than 6 arguments is not allowed
- malloc space for the arguments, and pass this in the rbp register
- Use the arg syscall in order to pass additional arguments
- Push them on the stack, pushing the earlier arguments first (e.g. push arg7; push arg8; callq)
- Push them on the stack, pushing the earlier arguments last (e.g. push arg8; push arg7; callq)",4,"In x86_64, after the 6th argument to a function, how are the rest of a function's arguments passed into the function?",
6,Expand my stack,40,No,"- Add to rsp
- Subtract from rsp
- Call the malloc function
- Just save data to whatever memory address we want and let the operating system figure it out",1,"In order to allocate more space on the stack, we:",
7,No Miss (Rate),120,No,"- 5/10
- 3/10
- 2/10 
- 6/10",1,"Assume our device has a direct mapped cache consisting of a single 64 byte block that is initially empty. Suppose we are running  a program that accesses the following memory addresses in order:

0x00000000
0x00000004
0x00000008
0x00000010
0x0000100C
0x00001008
0x00001004
0x00001000
0x00000FFC
0x00000FF8

What is our miss rate (in fractional form)?

","The miss rate of this program will be 3/10

0x00000000 // miss, bring in block 0 which ranges from 0x00 to 0x3F (64 bytes)
0x00000004 // hit (block 0)
0x00000008 // hit (block 0)
0x00000010 // hit (block 0)
0x0000100C // miss, bring in block 64 (floor of 0x100C / block size)
0x00001008 // hit (block 64)
0x00001004 // hit (block 64)
0x00001000 // hit (block 64)
0x00000FFC // miss (block 63)
0x00000FF8 // hit (block 63)

We have three misses and 7 hits for a 3/10 miss rate"
8,#####,40,No,"- OpenMP
- Compiler
- Preprocessor
- Linker
- Assembler",2,"What is the program that when compiling, processes the lines starting with a #, like #pragma omp parallel, #define VAL 5, or #include <stdio.h>?",These are preprocessor directives 
9,#####,40,No,"- OpenMP
- Compiler
- Preprocessor
- Linker
- Assembler",4,"What is the program that converts text assembly instructions, like movq %rax, %rbx, into bytecode?",
10,#####,40,No,"- OpenMP
- Compiler
- Preprocessor
- Linker
- Assembler",3,"What is the program that when compiling, combines multiple separate object files into a single executable file?",
11,Optimize I,40,No,"- Code Motion
- Strength Reduction
- Common Subexpression Elimination
- Procedure Calls Minimization
- Memory Aliasing
- Tiling",1,What is the name of the optimization that involves using repeated addition inside of a loop instead of multiplication?,
12,Optimize II,40,No,"- Code Motion
- Strength Reduction
- Common Subexpression Elimination
- Procedure Calls Minimization
- Memory Aliasing
- Tiling",0,"What is the name of the optimization that replaces repeated array access into the same index inside a for loop with a temporary variable, and saved into the array once outside the loop?",
13,OpenMP,120,No,"- x, j; sum:a
- _; +:a
- _; sum:a
- x; +:a
- x, j; sum:a
- x: sum:a",3,"Fill in the blanks with the minimal amount of text while still keeping functionality the exact same even if the pragma line is removed:

int j, x;
int a = 0;

#pragma omp parallel for private(___) reduction(______)
for (j = 0; j < 1000000; j++) {
  for (int k = 0; k < 5; k++) {
    x = calc(j, x);
    a += x;
  }
}
  ","Don't need to privatize j (that's handled by the parallel for directive)
Must privatize x to avoid different threads overwriting each other's versions of x
We need a reduction on a to allow threads to add to their own private versions of a before combining at the end"
14,Caching the VM,40,Yes,TLB,,What is the 3-letter acronym for the item that caches recently accessed entries of the page table?,Translation lookaside buffer (TLB) is a memory cache that stores the recent translations of virtual memory to physical memory
15,Memory I,40,No,"- Stack
- Heap
- Text segment
- Data segment",0,Which section of memory is referenced when using push or pop?,
16,Memory II,40,No,"- Stack
- Heap
- Text segment
- Data segment",2,Which section of memory holds the actual bytecode/assembly?,
17,Memory III,40,No,"- Stack
- Heap
- Text segment
- Data segment",3,Which section of memory holds statically allocated data?,
18,Memory IV,40,No,"- Stack
- Heap
- Text segment
- Data segment",1,Which section of memory is used for dynamically allocated memory?,
19,(C|R)ISCy,40,No,"- RISC
- CISC",1,"Which type of architecture is most likely to have an instruction ""decryptAESMsg"" that takes in 2 registers as inputs, holding the decryption key and encrypted data to decrypt?","CISC have more ""complex"" instruction sets, which allows doing complicated operations, like decryption, all in one instruction. RISC on the other hand is less likely to have this instruction, instead depending on the compiler to decrypt using more primitive operations like add/sub/mult/cmp."
20,C vs R,40,No,"- Instruction encodings are simplified
- Larger program file size due to more instructions
- More complex hardware design
- More power efficient",2,"In general (feel free to think x86 vs MIPS), which of the following is NOT a result of using RISC over CISC?","RISC has more simplified instructions, which means that it often takes more instructions to do the same operation than in CISC. Because of this, they tend to be more power efficient due to their simplicity."
21,Linking,40,No,"- Static LInking
- Dynamic Linking
- Lazy Linking
- Combined Linking",0,Which kind of linking constructs a program's object files together at compile time?,
22,My code is slow!,40,No,"- Race conditions
- False sharing
- Serialized threads
- Unoptimized load balancing
- Operating system interference",2,"A student was working on a modified phase 1 of the parallel lab, trying to count the number of black pixels (all channel values are 0). This is their code:
#pragma omp parallel for shared(count)
for (int i = 0; i < size; i++)
  if (arr[i] == 0)
    #pragma omp critical
    count += 1;

When running the code, it barely performs better than without the parallelism, even with a large number of threads. Which of the following is most likely the largest contributing reason to the slow performance?","The critical section around count += 1 means that only one thread can update count at a time. Even though the loop is parallelized, the actual increment operation is serialized because it is protected by a critical section."
23,VM,120,Yes,0x0?78a5b,,"Using the below table, translate 0x003a5b into a physical address, assuming that virtual addresses are 32 bits, physical addresses are 20 bits, and pages are 4KB. Answer in hexadecimal, like 0x1234, and if the memory address is invalid, submit ""invalid"".

Hint: the first row of the table corresponds with the 0th page, the second row the 1st page, etc.

| Valid | VPO  |
|-------|------|
| 1     | 0x12 |
| 1     | 0x34 |
| 0     | 0x56 |
| 1     | 0x78 |
| 1     | 0x99 |
| 0     | 0xaa |","Since pages are 4KB = 2^12 bits, we know that we have 12 bits in the virtual address for the page offset, and the rest is the virtual page number. 12 bits = 3 hex characters (or you can convert to binary), so we keep the last 3 hex characters and use the table to translate the VPN to VPO."
24,My stock! My float!,300,Yes,-44\.5,,"Using the 32-bit float floating point number standard, convert 0xC2320000 into a decimal. When answering, leave off unnecessary zeros, like 12.34. You can also submit ""NaN"" if the result is not a number, or ""inf"" for infinity.

Hint: there are 8 bits for the exponent in a 32-bit floating point number.","In binary this looks like:
1100 0010 0011 0010 0000 0000 0000 0000

The sign bit is 1, the exponent field is 10000100, and the fractional field is 0110010....0
The bias is 2^(exp_size - 1) - 1 = 2^(8-1) - 1 = 127
E  = exp - bias = 132 - 127 = 5
M = 1 + Frac = 1 + 2^(-2) + 2^(-3) + 2^(-6) = 1.390625

Result = (-1)^s * M * 2^E = -(1.390625 * 32) = -44.5"
25,MIPS,120,Yes,"(addiu? \$t1, ?\$t0, ?(100|0x64))|(la \$t1, ?(100|0x64)\(\$t0\))",,"Write an equivalent MIPS instruction for: leaq 100(%eax), %edx. Use $t0 for %eax, and $t1 for %edx. Your result should look like `instr $r1, $r2, val` or similar",
26,No leaq?,60,Yes,21,,"What value (in decimal) is stored in %rdi after this x86_64 instruction is run?

Assume %rax = 2, %rbx = 3

leaq 10(%rax, %rbx, 3), %rdi",%rax + %rbx * 3 + 10 = 2 + 9 + 10 = 21
27,Link my heart together,1200,Yes,31|0?x?1f,,"You have infiltrated the secret base of SEASnet, and now have access to their secret password generating script! You ran the file, making detailed notes of what was going on using gdb, but right before the password was printed, the power cut off! Can you reconstruct what the program was doing, and get the final return value of the getVal function (in decimal or hexadecimal)?

In order to save screen real estate and trees, you've recorded the commands on a google doc, available at https://tinyurl.com/gdb-dump ","code used to generate the assembly (alec):

struct node
{
    struct node *prev;
    int val;
    struct node *next;
};
int getVal(struct node *p, int search)
{
    if (p->val > search)
    {
        return p->prev->val;
    }
    else
    {
        return getVal(p->next, search);
    }
}

Partial writeup https://docs.google.com/document/d/1l6O_iAoG8aio8CrGg7bxbA85kLfecKfJim9NFS38xvI/edit?usp=sharing "
28,Final Location,30,No,"- Moore 100
- CS 50
- Dodd Hall 147
- CS 24
- Online",2,"Congratulations on making it this far! One final question, where is the final?",
29,Final Time,30,No,"- Saturday 8am
- Sunday 8am
- Monday 8am
- Tuesday 8am
- Wednesday 8am
- Thursday 8am
- Friday 8am",4,When is the final?,
,,,,,,,
,,,,,,,
,,,,,,,
,,,,,,,
,,,,,,,
,Total time (min):,47.66666667,,,,,